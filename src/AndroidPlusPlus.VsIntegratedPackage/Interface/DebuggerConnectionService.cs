////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Runtime.InteropServices;
using Microsoft.VisualStudio;
using AndroidPlusPlus.Common;
using AndroidPlusPlus.VsDebugCommon;
using AndroidPlusPlus.VsDebugEngine;
using System.Threading.Tasks;
using System.Threading;
using Microsoft.VisualStudio.Shell;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace AndroidPlusPlus.VsIntegratedPackage
{

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public class DebuggerConnectionService : IDebuggerConnectionService
  {

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    private DebuggerConnectionWindow m_debuggerConnectionWindow;

    private object m_debuggerConnectionWindowLock = new object();

    private StringBuilder m_textBuffer = new StringBuilder ();

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public void Initialize(IServiceProvider provider)
    {
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public async System.Threading.Tasks.Task InitializeAsync(IAsyncServiceProvider provider, CancellationToken cancellationToken)
    {
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    private void LaunchWindowClosed (object sender, EventArgs e)
    {
      m_textBuffer.Clear ();

      lock (m_debuggerConnectionWindowLock)
      {
        m_debuggerConnectionWindow = null;
      }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    #region IDebuggerConnectionService Members

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public async Task<int> LaunchDialogShow ()
    {
      LoggingUtils.PrintFunction ();

      if (m_debuggerConnectionWindow == null)
      {
        m_debuggerConnectionWindow = new DebuggerConnectionWindow ();

        m_debuggerConnectionWindow.Closed += LaunchWindowClosed;
      }

      if (m_debuggerConnectionWindow == null)
      {
        throw new InvalidOperationException ("Failed to create connection window");
      }

      lock (m_debuggerConnectionWindowLock)
      {
        m_debuggerConnectionWindow.Dispatcher.Invoke (() =>
        {
          m_debuggerConnectionWindow.textBox1.BeginChange ();

          m_debuggerConnectionWindow.textBox1.Text = m_textBuffer.ToString ();

          m_debuggerConnectionWindow.textBox1.EndChange ();

          m_debuggerConnectionWindow.textBox1.ScrollToEnd ();

          m_debuggerConnectionWindow.progressBar1.IsIndeterminate = true;

          m_debuggerConnectionWindow.Show ();

          m_debuggerConnectionWindow.Activate ();
        });
      }

      return VSConstants.S_OK;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public async Task<int> LaunchDialogUpdate (string status, bool isError)
    {
      LoggingUtils.PrintFunction ();

      string line = string.Format ("[{0}] {1}", ((isError) ? "error" : "status"), status);

      LoggingUtils.Print (line);

      m_textBuffer.AppendLine (line);

      m_debuggerConnectionWindow?.Dispatcher.Invoke (() =>
      {
        lock (m_debuggerConnectionWindowLock)
        {
          m_debuggerConnectionWindow.textBox1.BeginChange ();

          m_debuggerConnectionWindow.textBox1.Text = m_textBuffer.ToString ();

          m_debuggerConnectionWindow.textBox1.EndChange ();

          m_debuggerConnectionWindow.textBox1.ScrollToEnd ();

          m_debuggerConnectionWindow.progressBar1.IsIndeterminate = !isError;

          m_debuggerConnectionWindow.Activate ();
        }
      });

      return VSConstants.S_OK;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public async Task<int> LaunchDialogClose ()
    {
      LoggingUtils.PrintFunction ();

      m_debuggerConnectionWindow?.Dispatcher.InvokeAsync(() =>
      {
        lock (m_debuggerConnectionWindowLock)
        {
          m_debuggerConnectionWindow.Close ();
        }
      });

      return VSConstants.S_OK;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    #endregion

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

