////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using AndroidPlusPlus.MsBuild.Common;
using AndroidPlusPlus.MsBuild.Common.Attributes;
using Microsoft.Build.Framework;
using Microsoft.Build.Utilities;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Resources;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace AndroidPlusPlus.MsBuild.DeployTasks
{

  public class AndroidDex : TrackedOutOfDateToolTask
  {

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public AndroidDex ()
      : base (new ResourceManager ("AndroidPlusPlus.MsBuild.DeployTasks.Properties.Resources", Assembly.GetExecutingAssembly ()))
    {
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    [SwitchString(Switch = "-Xms")]
    public string JvmInitialHeapSize { get; set; } = "32m";

    [SwitchString(Switch = "-Xmx")]
    public string JvmMaximumHeapSize { get; set; } = "1024m";

    [SwitchString(Switch = "-Xss")]
    public string JvmThreadStackSize { get; set; } = "1m";

    [SwitchString(Switch = "-jar", Separator = " ")]
    public string JvmJar { get; set; }

    [SwitchBool(Switch = "--dex")]
    public bool CreateDex { get; set; }

    [SwitchBool(Switch = "--multi-dex")]
    public bool MultiDex { get; set; }

    [SwitchString(Subtype = "file", Switch = "--main-dex-list", Separator = "=")]
    public ITaskItem MultiDexMainList
    {
      // --main-dex-list is only supported with --multi-dex
      get => MultiDex ? _multiDexMainList : null;
      set => _multiDexMainList = value;
    }
    private ITaskItem _multiDexMainList;

    [SwitchBool(Switch = "--minimal-main-dex")]
    public bool MultiDexMinimalMainDex
    {
      // --minimal-main-dex is only supported with --multi-dex
      get => MultiDex && _multiDexMinimalMainDex;
      set => _multiDexMinimalMainDex = value;
    }
    private bool _multiDexMinimalMainDex;

    [SwitchBool(Switch = "--incremental")]
    public bool Incremental
    {
      // --incremental is not supported with --multi-dex
      get => _incremental && !MultiDex;
      set => _incremental = value;
    }
    private bool _incremental = true;

    [SwitchBool(ReverseSwitch = "--no-optimize")]
    public bool Optimize { get; set; } = true;

    [SwitchBool(Switch = "--debug")]
    public bool Debug { get; set; }

    [SwitchBool(Switch = "--verbose")]
    public bool Verbose { get; set; }

    [SwitchBool(Switch = "--statistics")]
    public bool Statistics { get; set; }

    [Required]
    [Output]
    [SwitchStringList(IsRequired = true, Subtype = "file", Switch = "--output", Separator = "=")]
    public ITaskItem[] OutputPath { get; set; }

    [Required]
    [SwitchStringList(Subtype = "file")]
    public ITaskItem[] SourceFiles { get; set; }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    protected override bool ValidateParameters()
    {
      var inputFiles = new List<ITaskItem>();

      if (MultiDexMainList != null)
      {
        inputFiles.Add(MultiDexMainList);
      }

      inputFiles.AddRange(SourceFiles);

      InputFiles = inputFiles.ToArray();

      return base.ValidateParameters();
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    protected override string GenerateResponseFileCommands()
    {
      return string.Empty; // Disable use of response files.
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    protected override void LogEventsFromTextOutput(string singleLine, MessageImportance messageImportance)
    {
      if (singleLine?.StartsWith("Exception in thread") ?? false)
      {
        Log.LogError(singleLine);
      }

      base.LogEventsFromTextOutput(singleLine, MessageImportance.High);
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
