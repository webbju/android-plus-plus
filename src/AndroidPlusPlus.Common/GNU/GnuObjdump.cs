////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace AndroidPlusPlus.Common
{

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public class GnuObjdump
  {

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public static string GetElfSectionData (string objDumpTool, string elfBinary, string sectionName)
    {
      if (string.IsNullOrWhiteSpace (objDumpTool) || !File.Exists (objDumpTool))
      {
        throw new ArgumentException ("Could not find required objdump tool. Expected: " + objDumpTool);
      }

      if (string.IsNullOrWhiteSpace (elfBinary) || !File.Exists (elfBinary))
      {
        throw new ArgumentException ("Could not find required ELF binary. Expected: " + elfBinary);
      }

      if (string.IsNullOrWhiteSpace (sectionName))
      {
        throw new ArgumentNullException (nameof(sectionName));
      }

      using (SyncRedirectProcess dumpSection = new SyncRedirectProcess (objDumpTool, string.Format ("-s -j {0} {1}", sectionName, elfBinary)))
      {
        int exitCode = dumpSection.StartAndWaitForExit ();

        if (exitCode == 0)
        {
          StringBuilder dumpContent = new StringBuilder ();

          string dumpRegExPattern = " ([0-9a-fA-F]+) (?<block_a>[0-9a-fA-F]*) (?<block_b>[0-9a-fA-F]*) (?<block_c>[0-9a-fA-F]*) (?<block_d>[0-9a-fA-F]*)";

          Regex regExMatcher = new Regex (dumpRegExPattern, RegexOptions.Compiled);

          MatchCollection regExMatches = regExMatcher.Matches (dumpSection.StandardOutput);

          string [] blockIds = 
          {
            "${block_a}",
            "${block_b}",
            "${block_c}",
            "${block_d}"
          };

          foreach (Match match in regExMatches)
          {
            foreach (string block in blockIds)
            {
              string blockData = match.Result (block);

              if (!string.IsNullOrWhiteSpace (blockData))
              {
                for (int i = 0; i < blockData.Length; i += 2)
                {
                  string hexComponent = blockData.Substring (i, 2);

                  dumpContent.Append (Convert.ToChar (Convert.ToUInt32 (hexComponent, 16)));
                }
              }
            }
          }

          return dumpContent.ToString ();
        }
      }

      return null;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
