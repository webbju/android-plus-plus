////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace AndroidPlusPlus.Common
{

  public partial class AndroidSettings
  {

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    private static string _sdkRoot;

    public static string SdkRoot
    {
      get
      {
        if (string.IsNullOrEmpty(_sdkRoot))
        {
          //
          // Probe for possible Android SDK installation directories.
          //

          var androidSdkLocations = new HashSet<string>();

          androidSdkLocations.Add(Environment.ExpandEnvironmentVariables("%LOCALAPPDATA%\\Android\\Sdk"));

          androidSdkLocations.Add(Environment.ExpandEnvironmentVariables("%ANDROID_SDK%"));

          androidSdkLocations.Add(Environment.ExpandEnvironmentVariables("%ANDROID_SDK_ROOT%"));

          androidSdkLocations.Add(Environment.ExpandEnvironmentVariables("%ANDROID_HOME%"));

          androidSdkLocations.RemoveWhere(path => !Directory.Exists(path));

          _sdkRoot = androidSdkLocations.First();
        }

        return _sdkRoot;
      }
      set => _sdkRoot = value;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    private static string _sdkBuildTools;

    public static string SdkBuildToolsRoot
    {
      get
      {
        if (_sdkBuildTools == null)
        {
          var androidSdkBuildToolsLocations = new HashSet<string>();

          foreach (var dir in Directory.GetDirectories(Path.Combine(SdkRoot, "build-tools")))
          {
            androidSdkBuildToolsLocations.Add(dir);
          }

          _sdkBuildTools = androidSdkBuildToolsLocations.First();
        }

        return _sdkBuildTools;
      }
      set => _sdkBuildTools = value;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    private static string _ndkRoot;

    public static string NdkRoot
    {
      get
      {
        if (string.IsNullOrEmpty(_ndkRoot))
        {
          //
          // Probe for possible Android NDK installation directories.
          //

          var androidNdkLocations = new HashSet<string>();

          foreach (var dir in Directory.GetDirectories(Environment.ExpandEnvironmentVariables("%LOCALAPPDATA%\\Android\\Sdk\\ndk")))
          {
            androidNdkLocations.Add(dir);
          }

          androidNdkLocations.Add(Environment.ExpandEnvironmentVariables("%ANDROID_NDK%"));

          androidNdkLocations.Add(Environment.ExpandEnvironmentVariables("%ANDROID_NDK_ROOT%"));

          androidNdkLocations.Add(Environment.ExpandEnvironmentVariables("%ANDROID_NDK_PATH%"));

          androidNdkLocations.RemoveWhere(path => !File.Exists(Path.Combine(path, "ndk-build.cmd")));

          _ndkRoot = androidNdkLocations.First();
        }

        return _ndkRoot;
      }
      set => _ndkRoot = value;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
