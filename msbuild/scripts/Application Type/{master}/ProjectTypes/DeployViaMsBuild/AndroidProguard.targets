<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml" />
  </ItemGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <UsingTask TaskName="AndroidProguard" AssemblyFile="$(ANDROID_PLUS_PLUS)\msbuild\bin\AndroidPlusPlus.MsBuild.DeployTasks.dll" />

  <UsingTask TaskName="VCMessage" AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <PropertyGroup>

    <ComputeAndroidProguardInputsTargets>$(ComputeAndroidProguardInputsTargets);ComputeAndroidJavaOutput;</ComputeAndroidProguardInputsTargets>

    <CleanDependsOn>$(CleanDependsOn);CleanAndroidProguard;</CleanDependsOn>

  </PropertyGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="_AndroidProguard"
    DependsOnTargets="$(ComputeAndroidProguardInputsTargets)">
  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  
  <Target
    Name="AndroidProguard"
    Condition="'$(ConfigurationType)' == 'Application'"
    BeforeTargets="$(AndroidProguardBeforeTargets)"
    AfterTargets="$(AndroidProguardAfterTargets)"
    DependsOnTargets="_AndroidProguard">

    <!-- 
      Flag sources for incremental build.
    -->

    <ItemGroup>
      <AndroidProguard Condition="'@(AndroidProguard)' != ''">
        <MinimalRebuildFromTracking Condition="'%(AndroidProguard.MinimalRebuildFromTracking)' == '' and '$(BuildType)' == 'Build' and '$(ForceRebuild)' != 'true'">true</MinimalRebuildFromTracking>
      </AndroidProguard>
    </ItemGroup>

    <!-- 
      Run the entire application's code-base through ProGuard. 
      - Optimising at this late stage (whole program optimisation) is slightly more simplistic than doing it on a per-library basis.
      - For ease of native development, obfuscation has been disabled.
    -->

    <PropertyGroup>
      <_ProGuardRoot>$(AndroidSdkRoot)\tools\proguard</_ProGuardRoot>
      <_ProGuardOutputLog>$(ProjectDir)$(IntDir)bin\proguard-output.txt</_ProGuardOutputLog>
      <_ProGuardOutputJar>$(ProjectDir)$(IntDir)bin\proguard-optimised.jar</_ProGuardOutputJar>
      <_ProGuardOutputSeeds>$(ProjectDir)$(IntDir)bin\proguard-seeds.txt</_ProGuardOutputSeeds>
      <_ProGuardOutputUsage>$(ProjectDir)$(IntDir)bin\proguard-usage.txt</_ProGuardOutputUsage>
      <_ProGuardOutputMapping>$(ProjectDir)$(IntDir)bin\proguard-mapping.txt</_ProGuardOutputMapping>
    </PropertyGroup>

    <ItemGroup>
      <!-- Default configuration script(s). -->
      <_CollatedProGuardProjectScripts
        Include="$(_ProGuardRoot)\proguard-android.txt"
      />
      <!--
      TODO: Resolve why using the optimised configuration massively breaks the ability to output to multiDex.
      <_CollatedProGuardProjectScripts
        Include="$(_ProGuardRoot)\proguard-android.txt"
        Condition="'$(UseDebugLibraries)' == 'true'"
      />
      <_CollatedProGuardProjectScripts
        Include="$(_ProGuardRoot)\proguard-android-optimize.txt"
        Condition="'$(UseDebugLibraries)' != 'true'"
      />
      -->
      <_CollatedProGuardProjectScripts
        Include="$(_ProGuardRoot)\proguard-android-project.txt"
        Condition="Exists('$(_ProGuardRoot)\proguard-android-project.txt')"
      />
      <!-- ProGuard configuration exported from processing the 'merged' AndroidManifest.xml -->
      <_CollatedProGuardProjectScripts 
        Include="%(AndroidManifestMergedManifest.ProguardOptionsOutputFile)" 
        Condition="Exists('%(AndroidManifestMergedManifest.ProguardOptionsOutputFile)')"
      />
      <!-- Look alongside *this* project's AndroidManfiest.xml files for ProGuard scripts. -->
      <_CollatedProGuardProjectScripts 
        Include="@(_ProjectAndroidManifests->'%(RootDir)%(Directory)proguard.txt')"
        Condition="Exists('%(RootDir)%(Directory)proguard.txt')"
      />
      <_CollatedProGuardProjectScripts 
        Include="@(_ProjectAndroidManifests->'%(RootDir)%(Directory)proguard-project.txt')"
        Condition="Exists('%(RootDir)%(Directory)proguard-project.txt')"
      />
      <!-- Look alongside *included* (third-party) projects' AndroidManifest.xml files for ProGuard scripts. -->
      <_CollatedProGuardProjectScripts 
        Include="@(_DependencyAndroidManifests->'%(RootDir)%(Directory)proguard.txt')"
        Condition="Exists('%(RootDir)%(Directory)proguard.txt')"
      />
      <_CollatedProGuardProjectScripts 
        Include="@(_DependencyAndroidManifests->'%(RootDir)%(Directory)proguard-project.txt')"
        Condition="Exists('%(RootDir)%(Directory)proguard-project.txt')"
      />
      <!-- Always include support for ProGuard-specific annotations. -->
      <_CollatedProGuardProjectScripts 
        Include="$(_ProGuardRoot)\examples\annotations\lib\annotations.pro"
        Condition="Exists('$(_ProGuardRoot)\examples\annotations\lib\annotations.pro')"
      />
    </ItemGroup>

    <PropertyGroup>
      <!-- Characters required to construct command file -->
      <Semicolon>%3B</Semicolon>
      <!-- Custom command file options and flattened arguments -->
      <_ProGuardCommandFile>$(ProjectDir)$(IntDir)bin\proguard-commands.txt</_ProGuardCommandFile>
      <_ProGuardIncludeScripts>@(_CollatedProGuardProjectScripts->Distinct()->'-include &quot;%(FullPath)&quot;')</_ProGuardIncludeScripts>
      <_ProGuardInJars>@(AndroidProguard->Distinct()->'-injars &quot;%(FullPath)&quot;(!META-INF/**.*,**.class,!**.class.d)')</_ProGuardInJars>
    </PropertyGroup>

    <!-- Create an empty output jar. -->
    <Exec 
      Condition="!Exists('$(_ProGuardOutputJar)')"
      Command="REM.&gt;&quot;$(_ProGuardOutputJar)&quot;"
    />

    <WriteLinesToFile
      Condition="'@(AndroidProguard)' != ''"
      File="$(_ProGuardCommandFile)"
      Lines=";
# 
# 
# 
$(_ProGuardIncludeScripts)
-libraryjars &quot;$(AndroidSdkRoot)\platforms\android-$(AndroidSdkLevel)\android.jar&quot;
$(_ProGuardInJars)
# 
# Output a collection of reports to help debugging.
# 
-printseeds &quot;$(_ProGuardOutputSeeds)&quot; 
-printusage &quot;$(_ProGuardOutputUsage)&quot; 
-printmapping &quot;$(_ProGuardOutputMapping)&quot; 
# 
# Explicitly don't obfuscate classes and methods.
# Doing so means that probing for class members\fields will fail on the native side.
# 
-dontobfuscate 
# 
# Specifies not to preverify the processed class files. 
# - See: http://proguard.sourceforge.net/manual/usage.html
# - &quot;Only when eventually targeting Android, it is not necessary, so you can then switch it off to reduce the processing time a bit.&quot;
# 
-dontpreverify
# 
# Skip all warnings, as we've already compiled all the sources via AndroidJava anyway.
# Most of the warnings produced refer to unknown classes, which are present on device but not in libraries.
# TODO: It might be wise to have this toggled. Especially considering this script now supports importing external proguard configs.
# 
-ignorewarnings 
# 
# Retain all classes with native members (http://proguard.sourceforge.net/manual/examples.html#native)
# TODO: This should have 'includedescriptorclasses', but this isn't supported in ProGuard 4.7.
# 
-keepclasseswithmembers class * {
  native &lt;methods&gt;$(Semicolon)
}
-keepclasseswithmembernames class * {
  native &lt;methods&gt;$(Semicolon)
}
# 
# Retain all default android.annotation attributes.
# This prevents projects failing when all classes have been stripped during the shrink process.
# 
-keep public class android.annotation.** {
    public *$(Semicolon)
}
-dontnote android.annotation.**
"
      Overwrite="true"
    />

    <ItemGroup>
      <AndroidProguard>
        <IncludeScripts>$(_ProGuardCommandFile)</IncludeScripts>
        <OutJars>$(_ProGuardOutputJar)</OutJars>
      </AndroidProguard>
    </ItemGroup>

    <PropertyGroup>
      <!-- Use a custom deployment of ProGuard (which supports Java 8 sources), when possible -->
      <__ProguardExeJar>$(ANDROID_PLUS_PLUS)\contrib\proguard5.2.1\lib\proguard.jar</__ProguardExeJar>
      <__ProguardExeJar Condition="!Exists('$(__ProguardExeJar)')">$(_ProGuardRoot)\lib\proguard.jar</__ProguardExeJar>
    </PropertyGroup>

    <AndroidProguard
      BuildingInIDE="$(BuildingInsideVisualStudio)"
      Condition="'@(AndroidProguard)' != ''"
      Sources="@(AndroidProguard->Distinct())"
      TrackerLogDirectory ="%(AndroidProguard.TrackerLogDirectory)"
      TrackFileAccess="$(TrackFileAccess)"
      MinimalRebuildFromTracking="%(AndroidProguard.MinimalRebuildFromTracking)"
      OutputCommandLine="%(AndroidProguard.OutputCommandLine)"
      ToolPath="$(JavaHomeDir)\bin"
      ToolExe="java.exe"
      ProguardJar="$(__ProguardExeJar)"
      PropertiesFile="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml">
      <Output TaskParameter="OutputFiles" ItemName="AndroidProguardOutputFiles" />
      <Output TaskParameter="SkippedExecution" PropertyName="AndroidProguardSkippedExecution" />
    </AndroidProguard>

    <ItemGroup>
      <!-- Ensure DEX output is referenced even when builds are skipped due to minimal rebuilds. -->
      <AndroidProguardOutputFiles Condition="'$(AndroidProguardSkippedExecution)' == 'true'" Include="$(_ProGuardOutputJar)" />
    </ItemGroup>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="ComputeAndroidProguardOutput"
    DependsOnTargets="AndroidProguard">

    <ItemGroup>
      <AndroidDalvik Include="@(AndroidProguardOutputFiles)" />
    </ItemGroup>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target Name="CleanAndroidProguard">

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

</Project>
