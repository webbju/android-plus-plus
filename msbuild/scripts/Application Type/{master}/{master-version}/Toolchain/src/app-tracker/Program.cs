////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using CommandLine;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Text;
using System.Xml;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace AndroidPlusPlus.AppTracker
{

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  class Program
  {

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    static int Main(string[] args)
    {
      using var trackedProcess = new Process();

      trackedProcess.StartInfo.FileName = args[0];

      trackedProcess.StartInfo.Arguments = string.Join(" ", args, 1, args.Length - 1);

      trackedProcess.StartInfo.CreateNoWindow = true;

      trackedProcess.StartInfo.UseShellExecute = false;

      trackedProcess.StartInfo.ErrorDialog = false;

      trackedProcess.StartInfo.RedirectStandardOutput = true;

      trackedProcess.StartInfo.RedirectStandardError = true;

      trackedProcess.OutputDataReceived += (object sender, DataReceivedEventArgs args) => Console.Write(args.Data);

      trackedProcess.ErrorDataReceived += (object sender, DataReceivedEventArgs args) => Console.Write(args.Data);

      trackedProcess.EnableRaisingEvents = true;

      if (!trackedProcess.Start())
      {
        throw new InvalidOperationException("Could not start tracked child process.");
      }

      trackedProcess.BeginOutputReadLine();

      trackedProcess.BeginErrorReadLine();

      trackedProcess.WaitForExit();

      return trackedProcess.ExitCode;
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  }

  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
